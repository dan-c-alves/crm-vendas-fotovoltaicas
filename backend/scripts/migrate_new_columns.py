#!/usr/bin/env python3
"""
Script para adicionar as novas colunas √† tabela leads
"""
import sqlite3
import os
from pathlib import Path

# Caminho para a base de dados
BASE_DIR = Path(__file__).resolve().parent.parent
DB_PATH = BASE_DIR.parent / 'data' / 'crm_vendas.db'

def add_new_columns():
    """Adicionar as novas colunas √† tabela leads"""
    try:
        # Conectar √† base de dados
        conn = sqlite3.connect(str(DB_PATH))
        cursor = conn.cursor()
        
        print(f"üìä Conectado √† base de dados: {DB_PATH}")
        
        # Verificar se as colunas j√° existem
        cursor.execute("PRAGMA table_info(leads)")
        columns = [column[1] for column in cursor.fetchall()]
        
        print(f"üìã Colunas existentes: {columns}")
        
        # Adicionar url_imagem_cliente se n√£o existir
        if 'url_imagem_cliente' not in columns:
            cursor.execute("ALTER TABLE leads ADD COLUMN url_imagem_cliente TEXT")
            print("‚úÖ Coluna 'url_imagem_cliente' adicionada")
        else:
            print("‚ÑπÔ∏è  Coluna 'url_imagem_cliente' j√° existe")
        
        # Adicionar google_event_id se n√£o existir
        if 'google_event_id' not in columns:
            cursor.execute("ALTER TABLE leads ADD COLUMN google_event_id TEXT")
            print("‚úÖ Coluna 'google_event_id' adicionada")
        else:
            print("‚ÑπÔ∏è  Coluna 'google_event_id' j√° existe")
        
        # Confirmar as mudan√ßas
        conn.commit()
        
        # Verificar as colunas ap√≥s a atualiza√ß√£o
        cursor.execute("PRAGMA table_info(leads)")
        new_columns = [column[1] for column in cursor.fetchall()]
        
        print(f"üìã Colunas ap√≥s atualiza√ß√£o: {new_columns}")
        print("‚úÖ Migra√ß√£o conclu√≠da com sucesso!")
        
    except Exception as e:
        print(f"‚ùå Erro durante a migra√ß√£o: {e}")
        if conn:
            conn.rollback()
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    print("üîÑ Iniciando migra√ß√£o da base de dados...")
    add_new_columns()
    print("üéâ Migra√ß√£o conclu√≠da!")